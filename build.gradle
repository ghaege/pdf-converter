plugins {
    id 'java-library'
    id 'eclipse-wtp'
    id 'idea'
	id 'maven-publish'
    id 'org.springframework.boot' version '2.2.11.RELEASE'
    id 'io.spring.dependency-management' version '1.0.10.RELEASE'
	id 'com.softeq.gradle.itest' version '1.0.4'
}

java {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
}

repositories {
	mavenLocal()
	mavenCentral()
}

// versions from 2020.12
ext {
    // @see https://mvnrepository.com/artifact/org.jodconverter/jodconverter-local
    jodconverterVersion = '4.3.0'

    // @see https://mvnrepository.com/artifact/io.springfox/springfox-swagger2
    swaggerVersion = '2.9.2'

    // @see https://mvnrepository.com/artifact/commons-io/commons-io
    commonsIoVersion = '2.8.0'

    // @see https://mvnrepository.com/artifact/org.glassfish.jaxb/jaxb-runtime
    jaxbVersion = '3.0.0'
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework:spring-core'
	
    implementation "io.springfox:springfox-swagger2:$swaggerVersion"
    implementation "io.springfox:springfox-swagger-ui:$swaggerVersion"   
    
    implementation "org.jodconverter:jodconverter-local:$jodconverterVersion"
    implementation "org.jodconverter:jodconverter-spring-boot-starter:$jodconverterVersion"
    
    implementation "commons-io:commons-io:$commonsIoVersion"
    implementation "org.glassfish.jaxb:jaxb-runtime:$jaxbVersion"
    
    // eclipse plugin seems to need the 'testImplementation' TODO remove this redundant code
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
 	testImplementation('org.junit.platform:junit-platform-launcher')
    
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine")
	// eclipse plugin ..
	
	itestImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
 	itestImplementation('org.junit.platform:junit-platform-launcher')
    
    itestRuntimeOnly("org.junit.jupiter:junit-jupiter-engine")
}

// @see https://github.com/Softeq/itest-gradle-plugin
integrationTest {
  useJUnitPlatform()
}

// publish to mavenLocal
publishing {
    publications {
        myLibrary(MavenPublication) {
            from components.java
        }
    }
}
// avoid Artifact .. wasn't produced by this build when:
// ./gradlew clean build publishToMavenLocal -xintegrationTest
configurations {
	[apiElements, runtimeElements].each {
		it.outgoing.artifacts.removeIf { it.buildDependencies.getDependencies(null).contains(jar) }
		it.outgoing.artifact(bootJar)
	}
}

group = 'de.qaepps'
description = 'PdfConverter - Rest Api'
version = '1.0-SNAPSHOT'
